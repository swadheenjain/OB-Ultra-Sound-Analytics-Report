--SET job.priority 'NORMAL';
--SET pig.encrypt.keyResolver 'org.apache.pig.crypto.shims.MappingKeyResolver';
--SET pig.encrypt.key.mapping.file 'file:////opt/key/all/allkeymappingload.xml';
--SET pig.ignoreBadFiles.force true;

/* Combined Denorm */
Data =  
LOAD '/refined/subsets/t1/non_restricted/*/2014' USING PigStorage('\\u1') AS
(tp_payer_key: int
,tp_tx_key: chararray
,ts_tx_stream_key: chararray
,ts_tx_seq: chararray
,ts_tx_type_code: chararray
,ts_product_type: chararray
,ts_received_date: chararray
,c_claim_id: chararray
,l_line_seq: chararray
,m_sub_id: chararray
,member_key: chararray
,dep_id: chararray
,c_dob: chararray
,c_gender_id: chararray
,member_dob_not_used: chararray
,member_gender_not_used: chararray
,cub_bill_type: chararray
,cond_code_1: chararray
,cond_code_2: chararray
,cond_code_3: chararray
,cond_code_4: chararray
,cond_code_5: chararray
,cond_code_6: chararray
,cond_code_7: chararray
,cond_code_8: chararray
,cond_code_9: chararray
,cond_code_10: chararray
,cond_code_11: chararray
,cond_code_12: chararray
,cond_code_13: chararray
,cond_code_14: chararray
,cond_code_15: chararray
,cond_code_16: chararray
,cond_code_17: chararray
,cond_code_18: chararray
,cond_code_19: chararray
,cond_code_20: chararray
,cond_code_21: chararray
,cond_code_22: chararray
,cond_code_23: chararray
,cond_code_24: chararray
,claim_diag_1: chararray
,claim_diag_2: chararray
,claim_diag_3: chararray
,claim_diag_4: chararray
,claim_diag_5: chararray
,claim_diag_6: chararray
,claim_diag_7: chararray
,claim_diag_8: chararray
,claim_diag_9: chararray
,claim_diag_10: chararray
,claim_diag_11: chararray
,claim_diag_12: chararray
,claim_diag_13: chararray
,claim_diag_14: chararray
,claim_diag_15: chararray
,claim_diag_16: chararray
,claim_diag_17: chararray
,claim_diag_18: chararray
,claim_diag_19: chararray
,claim_diag_20: chararray
,claim_diag_21: chararray
,claim_diag_22: chararray
,claim_diag_23: chararray
,claim_diag_24: chararray
,claim_diag_25: chararray
,admit_diag: chararray
,line_diag_1: chararray
,line_diag_2: chararray
,line_diag_3: chararray
,line_diag_4: chararray
,p_provider_id: chararray
,provider_key: chararray
,subspec_id: chararray
,t_taxgroup_id: chararray
,taxgroup_key: chararray
,l_dos_from: chararray
,l_dos_to: chararray
,pos_id: chararray
,l_insurance_key: chararray
,l_insurance_id: chararray
,sub_rev_code: chararray
,sub_cpt: chararray
,sub_mod1: chararray
,sub_mod2: chararray
,sub_mod3: chararray
,sub_mod4: chararray
,l_sub_units: double
,l_sub_amount: double
,rev_code: chararray
,cpt: chararray
,mod1: chararray
,mod2: chararray
,mod3: chararray
,mod4: chararray
,l_units: double
,l_amount: double
,l_copay: double
,l_coinsurance: double
,l_deductible: double
,l_cob: double
,l_other_reduction: double
,l_paid: double
,l_paid_date: chararray
,l_bypass_code: chararray
,l_claim_type: chararray
,l_par_yn: chararray
,l_line_key: long
,c_claim_key: long
,c_claim_master_key: long
,subspec_code: chararray
,ssl_spec_code: chararray
,pos: chararray
,rr_rec_cpt: chararray
,rr_rec_mod1: chararray
,rr_rec_mod2: chararray
,rr_rec_mod3: chararray
,rr_rec_mod4: chararray
,rr_rec_units: double
,rr_rec_pct: double
,c_claim_id_orig: chararray
,l_line_seq_orig: chararray
,c_cdf_text_1: chararray
,c_cdf_text_2: chararray
,c_cdf_text_3: chararray
,l_cdf_text_1: chararray
,l_cdf_text_2: chararray
,l_cdf_text_3: chararray
,l_provider_zip: chararray
,l_provider_plus_4: chararray
,l_tos: chararray
,rt_rec_tx_line_key: chararray
,tp_payer_short: chararray
,cub_drg: chararray
,ts_stream_key: chararray
,c_group_id: chararray
,c_partner_id: chararray
,cub_dos_from: chararray
,cub_dos_to: chararray
,cub_admit_date: chararray
,cub_admit_hour: chararray
,cub_admit_minute: chararray
,cub_admit_type: chararray
,cub_discharge_date: chararray
,cub_discharge_hour: chararray
,cub_discharge_minute: chararray
,cub_discharge_status: chararray
,cub_sub_drg: chararray
,cub_sub_severity: chararray
,cub_severity: chararray
,cub_sub_noncovered_amount: double
,cub_claim_billed_amount: double
,cub_claim_noncovered_amount: double
,cub_claim_allowed_amount: double
,cub_claim_paid_amount: double
,cub_assignment_of_benefits: chararray
,cub_prior_payments: double
,cub_npi_attending: chararray
,cub_date_adjudicated: chararray
,cub_date_received_client: chararray
,cub_claim_type: chararray
,cub_par_yn: chararray
,cub_npi: chararray
,cub_paid_date: chararray
,cub_product_state: chararray
,cub_grouper_id: chararray
,cub_grouper_key: chararray
,cub_claim_denial_rsn_cd: chararray
,cub_alc_days: int
,cub_birth_weight: double
,claim_diag_poa_1: chararray
,claim_diag_poa_2: chararray
,claim_diag_poa_3: chararray
,claim_diag_poa_4: chararray
,claim_diag_poa_5: chararray
,claim_diag_poa_6: chararray
,claim_diag_poa_7: chararray
,claim_diag_poa_8: chararray
,claim_diag_poa_9: chararray
,claim_diag_poa_10: chararray
,claim_diag_poa_11: chararray
,claim_diag_poa_12: chararray
,claim_diag_poa_13: chararray
,claim_diag_poa_14: chararray
,claim_diag_poa_15: chararray
,claim_diag_poa_16: chararray
,claim_diag_poa_17: chararray
,claim_diag_poa_18: chararray
,claim_diag_poa_19: chararray
,claim_diag_poa_20: chararray
,claim_diag_poa_21: chararray
,claim_diag_poa_22: chararray
,claim_diag_poa_23: chararray
,claim_diag_poa_24: chararray
,claim_diag_poa_25: chararray
,admit_diag_poa: chararray
,ecode_diag_1: chararray
,ecode_poa_1: chararray
,ecode_diag_2: chararray
,ecode_poa_2: chararray
,ecode_diag_3: chararray
,ecode_poa_3: chararray
,rfv_diag_1: chararray
,rfv_poa_1: chararray
,value_code_1: chararray
,value_amount_1: double
,value_code_2: chararray
,value_amount_2: double
,value_code_3: chararray
,value_amount_3: double
,value_code_4: chararray
,value_amount_4: double
,value_code_5: chararray
,value_amount_5: double
,icd_proc_1: chararray
,icd_proc_date_1: chararray
,icd_proc_2: chararray
,icd_proc_date_2: chararray
,icd_proc_3: chararray
,icd_proc_date_3: chararray
,icd_proc_4: chararray
,icd_proc_date_4: chararray
,icd_proc_5: chararray
,icd_proc_date_5: chararray
,icd_proc_6: chararray
,icd_proc_date_6: chararray
,icd_proc_7: chararray
,icd_proc_date_7: chararray
,icd_proc_8: chararray
,icd_proc_date_8: chararray
,icd_proc_9: chararray
,icd_proc_date_9: chararray
,icd_proc_10: chararray
,icd_proc_date_10: chararray
,icd_proc_11: chararray
,icd_proc_date_11: chararray
,icd_proc_12: chararray
,icd_proc_date_12: chararray
,l_void_yn: chararray
,l_npi: chararray
,l_edit_0_allowed_yn: chararray
,l_zero_chg_line_seq: chararray
,l_zero_chg_sched_amount: double
,l_contract_id: chararray
,l_ndc: chararray
,l_er_visit_yn: chararray
,rr_reason1_code: chararray
,rr_reason1_id: chararray
,rr_claim1_id: chararray
,rr_line1_seq: chararray
,rr_rec1_pct: double
,rr_rec1_units: double
,rr_sub_rule1_key: int
,rr_dp1_key: int
,rr_reason2_code: chararray
,rr_reason2_id: chararray
,rr_claim2_id: chararray
,rr_line2_seq: chararray
,rr_rec2_pct: double
,rr_rec2_units: double
,rr_sub_rule2_key: int
,rr_dp2_key: int
,rr_reason3_code: chararray
,rr_reason3_id: chararray
,rr_claim3_id: chararray
,rr_line3_seq: chararray
,rr_rec3_pct: double
,rr_rec3_units: double
,rr_sub_rule3_key: int
,rr_dp3_key: int
,rr_bundling_rec_yn: chararray
,sub_rule_key_last: int
,date: chararray
,iht_saving: double
);

--Clms0 = Filter Data by ts_received_date MATCHES '(2014-0[1-6].*)'

Clms0 = Filter Data by l_claim_type=='P'
	and cpt MATCHES '(76801)|(76805)|(76811)|(76817)'
	and pos == '11'
	and l_amount >0 AND l_npi Is Not NULL AND ssl_spec_code Is Not NULL AND cpt Is Not NULL;

Spec = LOAD '/refined/mdm/spec_lkp' USING PigStorage('\\u1') AS (SPEC_CODE: chararray, SPEC_DESC: chararray); 

Clms2 = Join Clms0 By ssl_spec_code LEFT OUTER, Spec By SPEC_CODE; 

Clms = Foreach Clms2 Generate Clms0::tp_payer_short as payer_code
	, Clms0::c_claim_master_key as claim
	, Clms0::l_dos_from as dos_from
	, Clms0::member_key as member
	, Clms0::l_paid as l_paid
	, Clms0::l_amount as l_amount
	, Clms0::t_taxgroup_id as t_taxgroup_id
	, Clms0::p_provider_id as p_provider_id
	, Clms0::ssl_spec_code as ssl_spec_code
	, Clms0::cpt as cpt_code
	, Clms0::l_npi as npi
	, (Clms0::cpt=='76801' ? 1 : 0)  as Proc_76801_flagC
	, (Clms0::cpt=='76805' ? 1 : 0)  as Proc_76805_flagC
	, (Clms0::cpt=='76811' ? 1 : 0)  as Proc_76811_flagC
	, (Clms0::cpt=='76817' ? 1 : 0)  as Proc_76817_flagC
	
	, (Clms0::cpt MATCHES '(76801)|(76805)|(76811)' ? 1 : 0)  as Proc_76801_05_11_flagC;


	
OB_Ultra_Filter  = Foreach ( Group Clms By (payer_code,claim,member,p_provider_id,t_taxgroup_id,npi,ssl_spec_code, dos_from)){
		
	Generate FLATTEN(group) as (payer_code,claim,member,p_provider_id,t_taxgroup_id,npi,ssl_spec_code, dos_from),SUM(Clms.Proc_76801_flagC) as Proc_76801_flag
	,SUM(Clms.Proc_76805_flagC) as Proc_76805_flag,SUM(Clms.Proc_76811_flagC) as Proc_76811_flagC, SUM(Clms.Proc_76817_flagC) as Proc_76817_flag
	,SUM(Clms.Proc_76801_05_11_flagC) as Proc_76801_05_11_flag;

};
 

A = Foreach OB_Ultra_Filter generate $0..$12
	, ( Proc_76817_flag == 1 AND Proc_76801_05_11_flag == 0 ? 1 : 0 ) as billed_seperate_76817
	, ( Proc_76817_flag == 0 AND Proc_76801_05_11_flag == 1 ? 1 : 0 ) as billed_seperate_76801_05_11
	, ( Proc_76817_flag == 1 AND Proc_76801_05_11_flag == 1 ? 1 : 0 ) as billed_together;
	--, ( Proc_76817_flag == 1 OR Proc_76801_05_11_flag == 1 ? 1 : 0 ) as Total_billed ;



B = Foreach (Group A By (payer_code,p_provider_id,t_taxgroup_id,npi, ssl_spec_code)){

	Generate FLATTEN(group) as  (payer_code,p_provider_id,t_taxgroup_id,npi, ssl_spec_code)
		--, SUM(A.Proc_76801_flag) as Proc_76801_flag_sum
		--, SUM(A.Proc_76805_flag) as Proc_76805_flag_sum
		--, SUM(A.Proc_76811_flag) as Proc_76811_flag_sum
		--, SUM(A.Proc_76817_flag) as Proc_76817_flag_sum
		--, SUM(A.Proc_76801_05_11_flag) as Proc_76801_05_11_flag_sum
		, SUM(A.billed_seperate_76817) as billed_seperate_76817_sum
		, SUM(A.billed_seperate_76801_05_11) as billed_seperate_76801_05_11_sum
		, SUM(A.billed_together) as billed_together_sum
		, AVG(A.billed_together) as billed_together_mean;
		--, SUM(A.Total_billed) as Total_billed_sum ;
};



C = Foreach B Generate payer_code,ssl_spec_code,p_provider_id,t_taxgroup_id,npi,billed_seperate_76801_05_11_sum
		,billed_seperate_76817_sum , billed_together_sum
		,(billed_seperate_76801_05_11_sum +billed_seperate_76817_sum + billed_together_sum) as Total_billed_sum ,billed_together_mean,0 as sortorder;

D1 = Foreach ( Group C by payer_code ) {

		a = Foreach C Generate p_provider_id ;
		b = DISTINCT a;
		Generate FLATTEN(group) as (payer),COUNT(b.p_provider_id) as provider_count, SUM(C.billed_seperate_76801_05_11_sum) as billed_seperate_76801_05_11_sum_sum
		, SUM(C.billed_seperate_76817_sum) as billed_seperate_76817_sum_sum, (double)SUM(C.billed_together_sum) as billed_together_sum_sum
		,(double) SUM(C.Total_billed_sum) as Total_billed_sum_sum ;
};

D2 = Foreach D1 GENERATE payer,'All Specialty' as Spec,(chararray)provider_count,'All Taxgroup' as taxgroup,'All Npi' as NPI
		,billed_seperate_76801_05_11_sum_sum,billed_seperate_76817_sum_sum, billed_together_sum_sum,Total_billed_sum_sum
		, (double)(billed_together_sum_sum/Total_billed_sum_sum) as pct_billed_together,2 as sortorder ;

E1 = Foreach ( Group C by (payer_code,ssl_spec_code) ) {

		a = Foreach C Generate p_provider_id ;
		b = DISTINCT a;
		Generate FLATTEN(group) as (payer_code,ssl_spec_code),COUNT(b.p_provider_id) as provider_count, SUM(C.billed_seperate_76801_05_11_sum) as billed_seperate_76801_05_11_sum_sum
		, SUM(C.billed_seperate_76817_sum) as billed_seperate_76817_sum_sum, (double)SUM(C.billed_together_sum) as billed_together_sum_sum
		,(double)SUM(C.Total_billed_sum) as Total_billed_sum_sum ;
};

E2 = Foreach E1 GENERATE payer_code,ssl_spec_code,(chararray)provider_count,'All Taxgroup' as taxgroup,'All Npi' as NPI
		,billed_seperate_76801_05_11_sum_sum,billed_seperate_76817_sum_sum, billed_together_sum_sum,Total_billed_sum_sum
		, (double)(billed_together_sum_sum/Total_billed_sum_sum) as pct_billed_together, 1 as sortorder ;

FinalReport = UNION C, D2, E2 ;

FinalReport1 = ORDER FinalReport by  payer_code ASC, ssl_spec_code ASC, sortorder DESC,Total_billed_sum DESC ;



rmf /user/sjain/ObUltraSound

STORE FinalReport1 into '/user/sjain/ObUltraSound' using PigStorage('|','-schema');

--hadoop fs -getmerge /user/sjain/ObUltraSound  /var/home/sjain/output/ObUltraSound.txt
 
